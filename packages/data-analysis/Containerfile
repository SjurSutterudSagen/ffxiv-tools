# Using the official Rust image for building
############################################################################################################
# Stage 1: Build the shared library (as a static library)
############################################################################################################
FROM rust:1.84.0-alpine3.21 AS shared-builder

ARG BUILD_DATE
ARG BUILD_REVISION

# Set environment variables for the build
ENV CARGO_TERM_COLOR=always \
  CARGO_NET_GIT_FETCH_WITH_CLI=true \
  CARGO_HOME=/usr/local/cargo \
  RUST_BACKTRACE=1

# Install required system dependencies
RUN apk --no-cache upgrade && \
  apk add --no-cache \
  musl-dev \
  pkgconfig \
  openssl-dev \
  git \
  build-base

# Create a new user
RUN addgroup -S rust && adduser -S rust -G rust

# Set ownership of cargo home
RUN chown -R rust:rust $CARGO_HOME

# Create the workspace directory
WORKDIR /usr/src/ffxiv-tools

# Copy root manifests
COPY --chown=rust:rust Cargo.toml .
COPY --chown=rust:rust Cargo.lock .

# ⚠️ Fix workspace members to exclude  other applications
RUN sed -i '/members\s*=\s*\[/,/\]/c\members = ["packages\/rust-shared"]' Cargo.toml

# Copy shared library manifests
COPY --chown=rust:rust packages/rust-shared/Cargo.toml packages/rust-shared/Cargo.toml

# Create a dummy lib.rs to cache dependencies
RUN mkdir -p packages/rust-shared/src && \
  echo "// dummy file" > packages/rust-shared/src/lib.rs

# Cache dependencies (temporarily without --locked)
RUN cargo build --release --package rust-shared && \
  rm -rf packages/rust-shared/src

# Copy the real shared library source code
COPY --chown=rust:rust packages/rust-shared/src packages/rust-shared/src

# Rebuild with --locked (now builds a static library)
RUN cargo build --release --locked --package rust-shared

############################################################################################################
# Stage 2: Build the data analysis service (fixed workspace)
############################################################################################################
FROM rust:1.84.0-alpine3.21 AS service-builder

ARG BUILD_DATE
ARG BUILD_REVISION

# Reuse environment variables and setup
ENV CARGO_TERM_COLOR=always \
  CARGO_NET_GIT_FETCH_WITH_CLI=true \
  CARGO_HOME=/usr/local/cargo \
  RUST_BACKTRACE=1

RUN apk --no-cache upgrade && \
  apk add --no-cache \
  musl-dev \
  pkgconfig \
  openssl-dev \
  git \
  build-base

RUN addgroup -S rust && adduser -S rust -G rust
RUN chown -R rust:rust $CARGO_HOME

WORKDIR /usr/src/ffxiv-tools

# Copy the original root Cargo.toml (restores full workspace)
COPY --chown=rust:rust Cargo.toml .
COPY --chown=rust:rust Cargo.lock .

# Fix workspace members to exclude  other applications
RUN sed -i '/members\s*=\s*\[/,/\]/c\members = ["packages\/rust-shared", "packages\/data-analysis"]' Cargo.toml

# Copy the entire rust-shared source code
COPY --chown=rust:rust packages/rust-shared packages/rust-shared

# Copy data analysis service manifests
COPY --chown=rust:rust packages/data-analysis/Cargo.toml packages/data-analysis/Cargo.toml

# Create a dummy main.rs to cache dependencies
RUN mkdir -p packages/data-analysis/src && \
  echo "fn main() {}" > packages/data-analysis/src/main.rs

# Cache dependencies (includes rust-shared as a Rust library)
RUN cargo build --release --locked --package ffxiv-tools-data-analysis && \
  rm -rf packages/data-analysis/src

# Copy data analysis source code
COPY --chown=rust:rust packages/data-analysis/src packages/data-analysis/src

# Build the data analysis service
RUN cargo build --release --locked --package ffxiv-tools-data-analysis && \
  strip target/release/ffxiv-tools-data-analysis

############################################################################################################
# Final stage: Runtime image
############################################################################################################
FROM alpine:3.21.0

ARG BUILD_DATE
ARG BUILD_REVISION

# Add labels with build metadata
LABEL org.opencontainers.image.source="https://github.com/SjurSutterudSagen/ffxiv-tools" \
  org.opencontainers.image.description="FFXIV Tools Data Analysis Service" \
  org.opencontainers.image.licenses="MIT" \
  org.opencontainers.image.version="0.1.0" \
  org.opencontainers.image.created="${BUILD_DATE}" \
  org.opencontainers.image.revision="${BUILD_REVISION}" \
  org.opencontainers.image.authors="Sjur Sutterud Sagen"

WORKDIR /app

# Install runtime dependencies
RUN apk --no-cache upgrade && \
  apk add --no-cache \
  ca-certificates \
  tzdata \
  tini

# Create a non-root user
RUN addgroup -S rust && adduser -S rust -G rust

# Copy the data analysis service binary
COPY --from=service-builder /usr/src/ffxiv-tools/target/release/ffxiv-tools-data-analysis /app/

# Set ownership
RUN chown -R rust:rust /app

# Use the non-root user
USER rust

# Expose the port the app runs on
EXPOSE 3002

# Set runtime environment variables
ENV RUST_LOG=info \
  TZ=UTC \
  RUST_BACKTRACE=1 \
  RUST_LOG_FORMAT=json

# Use tini as init
ENTRYPOINT ["/sbin/tini", "--"]

# Run the application
CMD ["/app/ffxiv-tools-data-analysis"]